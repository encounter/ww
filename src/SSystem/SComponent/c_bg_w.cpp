//
// Generated by dtk
// Translation Unit: c_bg_w.cpp
//

#include "SSystem/SComponent/c_bg_w.h"
#include "dolphin/types.h"

/* 80247500-8024754C       .text ASSERT_SOLDHEAP__Fv */
void ASSERT_SOLDHEAP() {
    /* Nonmatching */
}

/* 8024754C-8024760C       .text __ct__4cBgWFv */
cBgW::cBgW() {
    /* Nonmatching */
}

/* 8024760C-8024767C       .text __dt__4cBgWFv */
cBgW::~cBgW() {
    /* Nonmatching */
}

/* 8024767C-8024769C       .text FreeArea__4cBgWFv */
void cBgW::FreeArea() {
    /* Nonmatching */
}

/* 8024769C-8024775C       .text GlobalVtx__4cBgWFv */
void cBgW::GlobalVtx() {
    /* Nonmatching */
}

/* 8024775C-80247840       .text SetVtx__4cBgWFv */
void cBgW::SetVtx() {
    /* Nonmatching */
}

/* 80247840-80247944       .text CalcPlane__4cBgWFv */
void cBgW::CalcPlane() {
    /* Nonmatching */
}

/* 80247944-802479D8       .text SetTri__4cBgWFv */
void cBgW::SetTri() {
    /* Nonmatching */
}

/* 802479D8-80247A24       .text BlckConnect__4cBgWFPUsPii */
void cBgW::BlckConnect(unsigned short*, int*, int) {
    /* Nonmatching */
}

/* 80247A24-80247BF8       .text ClassifyPlane__4cBgWFv */
void cBgW::ClassifyPlane() {
    /* Nonmatching */
}

/* 80247BF8-80247C4C       .text MakeBlckTransMinMax__4cBgWFP4cXyzP4cXyz */
void cBgW::MakeBlckTransMinMax(cXyz*, cXyz*) {
    /* Nonmatching */
}

/* 80247C4C-80247CD4       .text MakeBlckMinMax__4cBgWFiP4cXyzP4cXyz */
void cBgW::MakeBlckMinMax(int, cXyz*, cXyz*) {
    /* Nonmatching */
}

/* 80247CD4-80247E48       .text MakeBlckBnd__4cBgWFiP4cXyzP4cXyz */
void cBgW::MakeBlckBnd(int, cXyz*, cXyz*) {
    /* Nonmatching */
}

/* 80247E48-80247F4C       .text MakeNodeTreeRp__4cBgWFi */
void cBgW::MakeNodeTreeRp(int) {
    /* Nonmatching */
}

/* 80247F4C-80248078       .text MakeNodeTreeGrpRp__4cBgWFi */
void cBgW::MakeNodeTreeGrpRp(int) {
    /* Nonmatching */
}

/* 80248078-80248178       .text MakeNodeTree__4cBgWFv */
void cBgW::MakeNodeTree() {
    /* Nonmatching */
}

/* 80248178-802481C4       .text ChkMemoryError__4cBgWFv */
void cBgW::ChkMemoryError() {
    /* Nonmatching */
}

/* 802481C4-80248414       .text Set__4cBgWFP6cBgD_tUlPA3_A4_f */
void cBgW::Set(cBgD_t*, unsigned long, float(*)[3][4]) {
    /* Nonmatching */
}

/* 80248414-802485FC       .text RwgLineCheck__4cBgWFUsP11cBgS_LinChk */
void cBgW::RwgLineCheck(unsigned short, cBgS_LinChk*) {
    /* Nonmatching */
}

/* 802485FC-80248868       .text LineCheckRp__4cBgWFP11cBgS_LinChki */
void cBgW::LineCheckRp(cBgS_LinChk*, int) {
    /* Nonmatching */
}

/* 80248868-8024898C       .text LineCheckGrpRp__4cBgWFP11cBgS_LinChkii */
void cBgW::LineCheckGrpRp(cBgS_LinChk*, int, int) {
    /* Nonmatching */
}

/* 8024898C-80248AB8       .text RwgGroundCheckCommon__4cBgWFfUsP11cBgS_GndChk */
void cBgW::RwgGroundCheckCommon(float, unsigned short, cBgS_GndChk*) {
    /* Nonmatching */
}

/* 80248AB8-80248B68       .text RwgGroundCheckGnd__4cBgWFUsP11cBgS_GndChk */
void cBgW::RwgGroundCheckGnd(unsigned short, cBgS_GndChk*) {
    /* Nonmatching */
}

/* 80248B68-80248C38       .text RwgGroundCheckWall__4cBgWFUsP11cBgS_GndChk */
void cBgW::RwgGroundCheckWall(unsigned short, cBgS_GndChk*) {
    /* Nonmatching */
}

/* 80248C38-802491F4       .text GroundCrossRp__4cBgWFP11cBgS_GndChki */
void cBgW::GroundCrossRp(cBgS_GndChk*, int) {
    /* Nonmatching */
}

/* 802491F4-80249368       .text GroundCrossGrpRp__4cBgWFP11cBgS_GndChkii */
void cBgW::GroundCrossGrpRp(cBgS_GndChk*, int, int) {
    /* Nonmatching */
}

/* 80249368-802493B4       .text CopyOldMtx__4cBgWFv */
void cBgW::CopyOldMtx() {
    /* Nonmatching */
}

/* 802493B4-80249584       .text Move__4cBgWFv */
void cBgW::Move() {
    /* Nonmatching */
}

/* 80249584-80249698       .text RwgShdwDraw__4cBgWFiP13cBgS_ShdwDraw */
void cBgW::RwgShdwDraw(int, cBgS_ShdwDraw*) {
    /* Nonmatching */
}

/* 80249698-80249840       .text ShdwDrawRp__4cBgWFP13cBgS_ShdwDrawi */
void cBgW::ShdwDrawRp(cBgS_ShdwDraw*, int) {
    /* Nonmatching */
}

/* 80249840-80249904       .text ShdwDrawGrpRp__4cBgWFP13cBgS_ShdwDrawi */
void cBgW::ShdwDrawGrpRp(cBgS_ShdwDraw*, int) {
    /* Nonmatching */
}

/* 80249904-8024990C       .text ChkPolyThrough__4cBgWFiP16cBgS_PolyPassChk */
void cBgW::ChkPolyThrough(int, cBgS_PolyPassChk*) {
    /* Nonmatching */
}

/* 8024990C-80249938       .text ChkShdwDrawThrough__4cBgWFiP16cBgS_PolyPassChk */
void cBgW::ChkShdwDrawThrough(int, cBgS_PolyPassChk*) {
    /* Nonmatching */
}

/* 80249938-80249940       .text ChkGrpThrough__4cBgWFiP15cBgS_GrpPassChki */
void cBgW::ChkGrpThrough(int, cBgS_GrpPassChk*, int) {
    /* Nonmatching */
}

/* 80249940-80249A18       .text GetGrpToRoomIndex__4cBgWCFi */
void cBgW::GetGrpToRoomIndex(int) const {
    /* Nonmatching */
}

/* 80249A18-80249A58       .text GetTrans__4cBgWCFP4cXyz */
void cBgW::GetTrans(cXyz*) const {
    /* Nonmatching */
}

/* 80249A58-80249B64       .text GetTriPnt__4cBgWCFiP4cXyzP4cXyzP4cXyz */
void cBgW::GetTriPnt(int, cXyz*, cXyz*, cXyz*) const {
    /* Nonmatching */
}

/* 80249B64-80249BA0       .text GetTopUnder__4cBgWCFPfPf */
void cBgW::GetTopUnder(float*, float*) const {
    /* Nonmatching */
}

/* 80249BA0-80249BE8       .text __dt__9cBgW_BgIdFv */
cBgW_BgId::~cBgW_BgId() {
    /* Nonmatching */
}

/* 80249BE8-80249C48       .text __dt__11cBgW_GrpElmFv */
cBgW_GrpElm::~cBgW_GrpElm() {
    /* Nonmatching */
}

/* 80249C48-80249C64       .text __ct__11cBgW_GrpElmFv */
cBgW_GrpElm::cBgW_GrpElm() {
    /* Nonmatching */
}

/* 80249C64-80249CC0       .text __dt__13cBgW_NodeTreeFv */
cBgW_NodeTree::~cBgW_NodeTree() {
    /* Nonmatching */
}

/* 80249CC0-80249CDC       .text __ct__13cBgW_NodeTreeFv */
cBgW_NodeTree::cBgW_NodeTree() {
    /* Nonmatching */
}

/* 80249CDC-80249D24       .text __dt__11cBgW_RwgElmFv */
cBgW_RwgElm::~cBgW_RwgElm() {
    /* Nonmatching */
}

/* 80249D24-80249D34       .text __ct__11cBgW_RwgElmFv */
cBgW_RwgElm::cBgW_RwgElm() {
    /* Nonmatching */
}

/* 80249D34-80249D90       .text __dt__11cBgW_TriElmFv */
cBgW_TriElm::~cBgW_TriElm() {
    /* Nonmatching */
}

/* 80249D90-80249DAC       .text __ct__11cBgW_TriElmFv */
cBgW_TriElm::cBgW_TriElm() {
    /* Nonmatching */
}
