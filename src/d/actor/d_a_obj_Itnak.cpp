//
// Generated by dtk
// Translation Unit: d_a_obj_Itnak.cpp
//

#include "d_a_obj_Itnak.h"
#include "dolphin/types.h"

/* 00000078-0000009C       .text solidHeapCB__Q210daObjItnak5Act_cFP10fopAc_ac_c */
void daObjItnak::Act_c::solidHeapCB(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 0000009C-0000016C       .text create_heap__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::create_heap() {
    /* Nonmatching */
}

/* 0000016C-000003A0       .text _create__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::_create() {
    /* Nonmatching */
}

/* 000003A0-0000063C       .text __ct__Q210daObjItnak5Act_cFv */
daObjItnak::Act_c::Act_c() {
    /* Nonmatching */
}

/* 0000063C-00000708       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 00000708-00000750       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00000750-000007AC       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 000007AC-000007F4       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 000007F4-00000850       .text __dt__10dCcD_GSttsFv */
dCcD_GStts::~dCcD_GStts() {
    /* Nonmatching */
}

/* 00000850-00000990       .text __dt__14dBgS_ObjGndChkFv */
dBgS_ObjGndChk::~dBgS_ObjGndChk() {
    /* Nonmatching */
}

/* 00000990-00000AA8       .text __dt__11dBgS_GndChkFv */
dBgS_GndChk::~dBgS_GndChk() {
    /* Nonmatching */
}

/* 00000AA8-00000B48       .text __dt__8dBgS_ChkFv */
dBgS_Chk::~dBgS_Chk() {
    /* Nonmatching */
}

/* 00000B48-00000BA4       .text __dt__15dBgS_GrpPassChkFv */
dBgS_GrpPassChk::~dBgS_GrpPassChk() {
    /* Nonmatching */
}

/* 00000BA4-00000BEC       .text __dt__15cBgS_GrpPassChkFv */
cBgS_GrpPassChk::~cBgS_GrpPassChk() {
    /* Nonmatching */
}

/* 00000BEC-00000C48       .text __dt__16dBgS_PolyPassChkFv */
dBgS_PolyPassChk::~dBgS_PolyPassChk() {
    /* Nonmatching */
}

/* 00000C48-00000C90       .text __dt__16cBgS_PolyPassChkFv */
cBgS_PolyPassChk::~cBgS_PolyPassChk() {
    /* Nonmatching */
}

/* 00000C90-00000D10       .text __dt__11cBgS_GndChkFv */
cBgS_GndChk::~cBgS_GndChk() {
    /* Nonmatching */
}

/* 00000D10-00000D40       .text _delete__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::_delete() {
    /* Nonmatching */
}

/* 00000D40-00000DEC       .text set_mtx__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::set_mtx() {
    /* Nonmatching */
}

/* 00000DEC-00000EB0       .text set_co_se__Q210daObjItnak5Act_cFP8dCcD_Cyl */
void daObjItnak::Act_c::set_co_se(dCcD_Cyl*) {
    /* Nonmatching */
}

/* 00000EB0-00000F94       .text manage_draw_flag__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::manage_draw_flag() {
    /* Nonmatching */
}

/* 00000F94-00001118       .text set_collision__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::set_collision() {
    /* Nonmatching */
}

/* 00001118-00001158       .text _execute__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::_execute() {
    /* Nonmatching */
}

/* 00001158-0000123C       .text _draw__Q210daObjItnak5Act_cFv */
void daObjItnak::Act_c::_draw() {
    /* Nonmatching */
}

/* 0000123C-0000125C       .text Mthd_Create__Q210daObjItnak27@unnamed@d_a_obj_Itnak_cpp@FPv */
void daObjItnak::@unnamed@d_a_obj_Itnak_cpp@::Mthd_Create(void*) {
    /* Nonmatching */
}

/* 0000125C-00001280       .text Mthd_Delete__Q210daObjItnak27@unnamed@d_a_obj_Itnak_cpp@FPv */
void daObjItnak::@unnamed@d_a_obj_Itnak_cpp@::Mthd_Delete(void*) {
    /* Nonmatching */
}

/* 00001280-000012A4       .text Mthd_Execute__Q210daObjItnak27@unnamed@d_a_obj_Itnak_cpp@FPv */
void daObjItnak::@unnamed@d_a_obj_Itnak_cpp@::Mthd_Execute(void*) {
    /* Nonmatching */
}

/* 000012A4-000012C8       .text Mthd_Draw__Q210daObjItnak27@unnamed@d_a_obj_Itnak_cpp@FPv */
void daObjItnak::@unnamed@d_a_obj_Itnak_cpp@::Mthd_Draw(void*) {
    /* Nonmatching */
}

/* 000012C8-000012D0       .text Mthd_IsDelete__Q210daObjItnak27@unnamed@d_a_obj_Itnak_cpp@FPv */
void daObjItnak::@unnamed@d_a_obj_Itnak_cpp@::Mthd_IsDelete(void*) {
    /* Nonmatching */
}

/* 000012D0-00001318       .text __dt__13cBgS_PolyInfoFv */
cBgS_PolyInfo::~cBgS_PolyInfo() {
    /* Nonmatching */
}

/* 00001318-00001360       .text __dt__10cCcD_GSttsFv */
cCcD_GStts::~cCcD_GStts() {
    /* Nonmatching */
}

/* 00001360-00001370       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001370-00001378       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001378-00001380       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001380-00001388       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001388-00001390       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001390-000013C8       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000013C8-000013D0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 000013D0-000013D8       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 000013D8-000013E0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 000013E0-00001418       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001418-0000141C       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 0000141C-00001424       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00001424-0000142C       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 0000142C-00001434       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001434-00001440       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001440-0000144C       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 0000144C-00001850       .text __dt__Q210daObjItnak5Act_cFv */
daObjItnak::Act_c::~Act_c() {
    /* Nonmatching */
}

/* 00001850-0000186C       .text PrmAbstract<i>__5daObjFPC10fopAc_ac_cii */
void daObj::PrmAbstract<int>(const fopAc_ac_c*, int, int) {
    /* Nonmatching */
}

/* 0000186C-00001874       .text @12@__dt__8dBgS_ChkFv */
void @12@__dt__8dBgS_ChkFv {
    /* Nonmatching */
}

/* 00001874-0000187C       .text @20@__dt__11dBgS_GndChkFv */
void @20@__dt__11dBgS_GndChkFv {
    /* Nonmatching */
}

/* 0000187C-00001884       .text @76@__dt__11dBgS_GndChkFv */
void @76@__dt__11dBgS_GndChkFv {
    /* Nonmatching */
}

/* 00001884-0000188C       .text @64@__dt__11dBgS_GndChkFv */
void @64@__dt__11dBgS_GndChkFv {
    /* Nonmatching */
}

/* 0000188C-00001894       .text @20@__dt__14dBgS_ObjGndChkFv */
void @20@__dt__14dBgS_ObjGndChkFv {
    /* Nonmatching */
}

/* 00001894-0000189C       .text @76@__dt__14dBgS_ObjGndChkFv */
void @76@__dt__14dBgS_ObjGndChkFv {
    /* Nonmatching */
}

/* 0000189C-000018A4       .text @64@__dt__14dBgS_ObjGndChkFv */
void @64@__dt__14dBgS_ObjGndChkFv {
    /* Nonmatching */
}

/* 000018A4-000018AC       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 000018AC-000018B4       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 000018B4-000018BC       .text @20@__dt__11cBgS_GndChkFv */
void @20@__dt__11cBgS_GndChkFv {
    /* Nonmatching */
}

