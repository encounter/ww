//
// Generated by dtk
// Translation Unit: d_a_bflower.cpp
//

#include "d_a_bflower.h"
#include "dolphin/types.h"

/* 000000EC-0000010C       .text CheckCreateHeap__FP10fopAc_ac_c */
void CheckCreateHeap(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 0000010C-0000058C       .text CreateHeap__11daBFlower_cFv */
void daBFlower_c::CreateHeap() {
    /* Nonmatching */
}

/* 0000058C-00000750       .text CreateInit__11daBFlower_cFv */
void daBFlower_c::CreateInit() {
    /* Nonmatching */
}

/* 00000750-0000080C       .text init_bck_anm__11daBFlower_cFs */
void daBFlower_c::init_bck_anm(short) {
    /* Nonmatching */
}

/* 0000080C-000008AC       .text _create__11daBFlower_cFv */
void daBFlower_c::_create() {
    /* Nonmatching */
}

/* 000008AC-00000A30       .text __ct__11daBFlower_cFv */
daBFlower_c::daBFlower_c() {
    /* Nonmatching */
}

/* 00000A30-00000A8C       .text __dt__13mDoExt_brkAnmFv */
mDoExt_brkAnm::~mDoExt_brkAnm() {
    /* Nonmatching */
}

/* 00000A8C-00000AE8       .text __dt__13mDoExt_bckAnmFv */
mDoExt_bckAnm::~mDoExt_bckAnm() {
    /* Nonmatching */
}

/* 00000AE8-00000B30       .text __dt__14mDoExt_baseAnmFv */
mDoExt_baseAnm::~mDoExt_baseAnm() {
    /* Nonmatching */
}

/* 00000B30-00000BFC       .text __dt__8dCcD_SphFv */
dCcD_Sph::~dCcD_Sph() {
    /* Nonmatching */
}

/* 00000BFC-00000C44       .text __dt__8cM3dGSphFv */
cM3dGSph::~cM3dGSph() {
    /* Nonmatching */
}

/* 00000C44-00000D10       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 00000D10-00000D58       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00000D58-00000DB4       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 00000DB4-00000DFC       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 00000DFC-00000E58       .text __dt__10dCcD_GSttsFv */
dCcD_GStts::~dCcD_GStts() {
    /* Nonmatching */
}

/* 00000E58-00000E94       .text __dt__4cXyzFv */
cXyz::~cXyz() {
    /* Nonmatching */
}

/* 00000E94-00000F4C       .text set_mtx__11daBFlower_cFv */
void daBFlower_c::set_mtx() {
    /* Nonmatching */
}

/* 00000F4C-00001078       .text _execute__11daBFlower_cFv */
void daBFlower_c::_execute() {
    /* Nonmatching */
}

/* 00001078-0000160C       .text actLive__11daBFlower_cFv */
void daBFlower_c::actLive() {
    /* Nonmatching */
}

/* 0000160C-0000185C       .text actDead__11daBFlower_cFv */
void daBFlower_c::actDead() {
    /* Nonmatching */
}

/* 0000185C-000018A4       .text animPlay__11daBFlower_cFv */
void daBFlower_c::animPlay() {
    /* Nonmatching */
}

/* 000018A4-000019AC       .text setCollision__11daBFlower_cFv */
void daBFlower_c::setCollision() {
    /* Nonmatching */
}

/* 000019AC-00001AC4       .text _draw__11daBFlower_cFv */
void daBFlower_c::_draw() {
    /* Nonmatching */
}

/* 00001AC4-00001AE4       .text daBFlower_Create__FPv */
void daBFlower_Create(void*) {
    /* Nonmatching */
}

/* 00001AE4-00001B14       .text daBFlower_Delete__FPv */
void daBFlower_Delete(void*) {
    /* Nonmatching */
}

/* 00001B14-00001B38       .text daBFlower_Draw__FPv */
void daBFlower_Draw(void*) {
    /* Nonmatching */
}

/* 00001B38-00001B5C       .text daBFlower_Execute__FPv */
void daBFlower_Execute(void*) {
    /* Nonmatching */
}

/* 00001B5C-00001B64       .text daBFlower_IsDelete__FPv */
void daBFlower_IsDelete(void*) {
    /* Nonmatching */
}

/* 00001B64-00001BAC       .text __dt__10cCcD_GSttsFv */
cCcD_GStts::~cCcD_GStts() {
    /* Nonmatching */
}

/* 00001BAC-00001BBC       .text GetShapeAttr__8dCcD_SphFv */
void dCcD_Sph::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001BBC-00001BC4       .text GetCoCP__12cCcD_SphAttrFv */
void cCcD_SphAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001BC4-00001BCC       .text GetCoCP__12cCcD_SphAttrCFv */
void cCcD_SphAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001BCC-00001BD4       .text CrossAtTg__12cCcD_SphAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001BD4-00001BDC       .text CrossAtTg__12cCcD_SphAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001BDC-00001C14       .text CrossAtTg__12cCcD_SphAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001C14-00001C1C       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_AabAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00001C1C-00001C24       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_TriAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00001C24-00001C2C       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_PntAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00001C2C-00001C64       .text CrossCo__12cCcD_SphAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001C64-00001C68       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 00001C68-00001C70       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00001C70-00001C80       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001C80-00001C88       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001C88-00001C90       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001C90-00001C98       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001C98-00001CA0       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001CA0-00001CD8       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001CD8-00001CE0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00001CE0-00001CE8       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00001CE8-00001CF0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00001CF0-00001D28       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001D28-00001D30       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001D30-00001D38       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001D38-00001D44       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001D44-00001D50       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001DDC-00001DE4       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00001DE4-00001DEC       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00001DEC-00001DF4       .text @280@__dt__8dCcD_SphFv */
void @280@__dt__8dCcD_SphFv {
    /* Nonmatching */
}

/* 00001DF4-00001DFC       .text @248@__dt__8dCcD_SphFv */
void @248@__dt__8dCcD_SphFv {
    /* Nonmatching */
}

