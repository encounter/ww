//
// Generated by dtk
// Translation Unit: d_a_bridge.cpp
//

#include "d_a_bridge.h"
#include "dolphin/types.h"

/* 00000078-00000504       .text ride_call_back__FP4dBgWP10fopAc_ac_cP10fopAc_ac_c */
void ride_call_back(dBgW*, fopAc_ac_c*, fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000504-00000540       .text __dt__4cXyzFv */
cXyz::~cXyz() {
    /* Nonmatching */
}

/* 00000540-00000614       .text kikuzu_set__FP12bridge_classP4cXyz */
void kikuzu_set(bridge_class*, cXyz*) {
    /* Nonmatching */
}

/* 00000614-000011EC       .text daBridge_Draw__FP12bridge_class */
void daBridge_Draw(bridge_class*) {
    /* Nonmatching */
}

/* 000011EC-00001580       .text control1__FP12bridge_classP4br_s */
void control1(bridge_class*, br_s*) {
    /* Nonmatching */
}

/* 00001580-0000178C       .text control2__FP12bridge_classP4br_s */
void control2(bridge_class*, br_s*) {
    /* Nonmatching */
}

/* 0000178C-000018A8       .text control3__FP12bridge_classP4br_s */
void control3(bridge_class*, br_s*) {
    /* Nonmatching */
}

/* 000018A8-00001B08       .text cut_control1__FP12bridge_classP4br_s */
void cut_control1(bridge_class*, br_s*) {
    /* Nonmatching */
}

/* 00001B08-00001D84       .text cut_control2__FP12bridge_classP4br_s */
void cut_control2(bridge_class*, br_s*) {
    /* Nonmatching */
}

/* 00001D84-00001FAC       .text himo_cut_control1__FP4cXyz */
void himo_cut_control1(cXyz*) {
    /* Nonmatching */
}

/* 00001FAC-00002A1C       .text bridge_move__FP12bridge_class */
void bridge_move(bridge_class*) {
    /* Nonmatching */
}

/* 00002A1C-00002A8C       .text s_a_b_sub__FPvPv */
void s_a_b_sub(void*, void*) {
    /* Nonmatching */
}

/* 00002A8C-00002AB8       .text search_aite__FP12bridge_class */
void search_aite(bridge_class*) {
    /* Nonmatching */
}

/* 00002AB8-00003C68       .text daBridge_Execute__FP12bridge_class */
void daBridge_Execute(bridge_class*) {
    /* Nonmatching */
}

/* 00003C68-00003CD4       .text daBridge_IsDelete__FP12bridge_class */
void daBridge_IsDelete(bridge_class*) {
    /* Nonmatching */
}

/* 00003CD4-00003D2C       .text daBridge_Delete__FP12bridge_class */
void daBridge_Delete(bridge_class*) {
    /* Nonmatching */
}

/* 00003D2C-00003E00       .text CreateInit__FP10fopAc_ac_c */
void CreateInit(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00003E00-00004310       .text CallbackCreateHeap__FP10fopAc_ac_c */
void CallbackCreateHeap(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00004310-00004770       .text daBridge_Create__FP10fopAc_ac_c */
void daBridge_Create(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00004770-00004830       .text __dt__4br_sFv */
br_s::~br_s() {
    /* Nonmatching */
}

/* 00004830-000048FC       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 000048FC-00004A44       .text __ct__4br_sFv */
br_s::br_s() {
    /* Nonmatching */
}

/* 00004A44-00004AC8       .text __ct__8dCcD_CylFv */
dCcD_Cyl::dCcD_Cyl() {
    /* Nonmatching */
}

/* 00004AC8-00004B10       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00004B10-00004B6C       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 00004B6C-00004BB4       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 00004BB4-00004BB8       .text __ct__4cXyzFv */
cXyz::cXyz() {
    /* Nonmatching */
}

/* 00004BB8-00004BC0       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00004BC0-00004BC8       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00004BC8-00004BD4       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00004BD4-00004BE0       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00004BE0-00004BF0       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00004BF0-00004BF8       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00004BF8-00004C00       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00004C00-00004C08       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00004C08-00004C10       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00004C10-00004C48       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00004C48-00004C50       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00004C50-00004C58       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00004C58-00004C60       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00004C60-00004C98       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00004C98-00004C9C       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 00004C9C-00004CA4       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00004CA4-00004CAC       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00004CAC-00004CB4       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

