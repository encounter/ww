//
// Generated by dtk
// Translation Unit: d_cc_mass_s.cpp
//

#include "d_cc_mass_s.h"
#include "dolphin/types.h"

/* 800AC810-800AC920       .text __ct__12dCcMassS_MngFv */
dCcMassS_Mng::dCcMassS_Mng() {
    /* Nonmatching */
}

/* 800AC920-800AC96C       .text Ct__12dCcMassS_MngFv */
void dCcMassS_Mng::Ct() {
    /* Nonmatching */
}

/* 800AC96C-800ACCB8       .text Prepare__12dCcMassS_MngFv */
void dCcMassS_Mng::Prepare() {
    /* Nonmatching */
}

/* 800ACCB8-800AD17C       .text Chk__12dCcMassS_MngFP4cXyzPP10fopAc_ac_cP15dCcMassS_HitInf */
void dCcMassS_Mng::Chk(cXyz*, fopAc_ac_c**, dCcMassS_HitInf*) {
    /* Nonmatching */
}

/* 800AD17C-800AD234       .text Clear__12dCcMassS_MngFv */
void dCcMassS_Mng::Clear() {
    /* Nonmatching */
}

/* 800AD234-800AD310       .text Set__12dCcMassS_MngFP8cCcD_ObjUc */
void dCcMassS_Mng::Set(cCcD_Obj*, unsigned char) {
    /* Nonmatching */
}

/* 800AD310-800AD384       .text SetAreaChk__12dCcMassS_MngFP8cCcD_ObjUcPFP10fopAc_ac_cP4cXyzUl_v */
void dCcMassS_Mng::SetAreaChk(cCcD_Obj*, unsigned char, void (*)(fopAc_ac_c*, cXyz*, unsigned long)) {
    /* Nonmatching */
}

/* 800AD384-800AD3D4       .text SetCam__12dCcMassS_MngFRC8cM3dGCps */
void dCcMassS_Mng::SetCam(const cM3dGCps&) {
    /* Nonmatching */
}

/* 800AD3D4-800AD3DC       .text GetResultCam__12dCcMassS_MngCFv */
void dCcMassS_Mng::GetResultCam() const {
    /* Nonmatching */
}

/* 800AD3DC-800AD3F8       .text GetCamTopPos__12dCcMassS_MngFP3Vec */
void dCcMassS_Mng::GetCamTopPos(Vec*) {
    /* Nonmatching */
}

/* 800AD3F8-800AD498       .text __dt__12cCcD_CpsAttrFv */
cCcD_CpsAttr::~cCcD_CpsAttr() {
    /* Nonmatching */
}

/* 800AD498-800AD524       .text __dt__12cCcD_CylAttrFv */
cCcD_CylAttr::~cCcD_CylAttr() {
    /* Nonmatching */
}

/* 800AD524-800AD55C       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 800AD55C-800AD594       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 800AD594-800AD5B0       .text __ct__12dCcMassS_ObjFv */
dCcMassS_Obj::dCcMassS_Obj() {
    /* Nonmatching */
}

