//
// Generated by dtk
// Translation Unit: d_a_steam_tag.cpp
//

#include "d_a_steam_tag.h"
#include "dolphin/types.h"

/* 00000078-00000084       .text getData__12daSteamTag_cFv */
void daSteamTag_c::getData() {
    /* Nonmatching */
}

/* 00000084-0000029C       .text CreateInit__12daSteamTag_cFv */
void daSteamTag_c::CreateInit() {
    /* Nonmatching */
}

/* 0000029C-00000398       .text createEmitter__12daSteamTag_cFv */
void daSteamTag_c::createEmitter() {
    /* Nonmatching */
}

/* 00000398-000003B4       .text endEmitter__12daSteamTag_cFv */
void daSteamTag_c::endEmitter() {
    /* Nonmatching */
}

/* 000003B4-000003BC       .text daSteamTag_Draw__FP12daSteamTag_c */
void daSteamTag_Draw(daSteamTag_c*) {
    /* Nonmatching */
}

/* 000003BC-000003DC       .text daSteamTag_Execute__FP12daSteamTag_c */
void daSteamTag_Execute(daSteamTag_c*) {
    /* Nonmatching */
}

/* 000003DC-000006FC       .text execute__12daSteamTag_cFv */
void daSteamTag_c::execute() {
    /* Nonmatching */
}

/* 000006FC-00000704       .text daSteamTag_IsDelete__FP12daSteamTag_c */
void daSteamTag_IsDelete(daSteamTag_c*) {
    /* Nonmatching */
}

/* 00000704-0000072C       .text daSteamTag_Delete__FP12daSteamTag_c */
void daSteamTag_Delete(daSteamTag_c*) {
    /* Nonmatching */
}

/* 0000072C-00000930       .text __dt__12daSteamTag_cFv */
daSteamTag_c::~daSteamTag_c() {
    /* Nonmatching */
}

/* 00000930-00000AD0       .text daSteamTag_Create__FP10fopAc_ac_c */
void daSteamTag_Create(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000AD0-00000BB0       .text __dt__8dCcD_CpsFv */
dCcD_Cps::~dCcD_Cps() {
    /* Nonmatching */
}

/* 00000BB0-00000C0C       .text __dt__8cM3dGCpsFv */
cM3dGCps::~cM3dGCps() {
    /* Nonmatching */
}

/* 00000C0C-00000C54       .text __dt__8cM3dGLinFv */
cM3dGLin::~cM3dGLin() {
    /* Nonmatching */
}

/* 00000C54-00000D20       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 00000D20-00000D68       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00000D68-00000DC4       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 00000DC4-00000E0C       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 00000E0C-00000E68       .text __dt__10dCcD_GSttsFv */
dCcD_GStts::~dCcD_GStts() {
    /* Nonmatching */
}

/* 00000E68-00000EB0       .text __dt__10cCcD_GSttsFv */
cCcD_GStts::~cCcD_GStts() {
    /* Nonmatching */
}

/* 00000EB0-00000EC0       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00000EC0-00000EC8       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00000EC8-00000ED0       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00000ED0-00000ED8       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000ED8-00000EE0       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000EE0-00000F18       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000F18-00000F20       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00000F20-00000F28       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00000F28-00000F30       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00000F30-00000F68       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00000F68-00000F6C       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 00000F6C-00000F74       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00000F74-00000F7C       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000F7C-00000F84       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00000F84-00000F90       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00000F90-00000F9C       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00000F9C-00000FAC       .text GetShapeAttr__8dCcD_CpsFv */
void dCcD_Cps::GetShapeAttr() {
    /* Nonmatching */
}

/* 00000FAC-00000FB4       .text CrossAtTg__12cCcD_CpsAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000FB4-00000FBC       .text CrossAtTg__12cCcD_CpsAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000FBC-00000FF4       .text CrossAtTg__12cCcD_CpsAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000FF4-00000FFC       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_AabAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00000FFC-00001004       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_TriAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00001004-0000100C       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_PntAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 0000100C-00001044       .text CrossCo__12cCcD_CpsAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001044-0000104C       .text @280@__dt__8dCcD_CpsFv */
void @280@__dt__8dCcD_CpsFv {
    /* Nonmatching */
}

/* 0000104C-00001054       .text @248@__dt__8dCcD_CpsFv */
void @248@__dt__8dCcD_CpsFv {
    /* Nonmatching */
}

/* 00001054-0000105C       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 0000105C-00001064       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

