//
// Generated by dtk
// Translation Unit: d_a_obj_plant.cpp
//

#include "d_a_obj_plant.h"
#include "dolphin/types.h"

/* 00000078-00000098       .text CheckCreateHeap__FP10fopAc_ac_c */
void CheckCreateHeap(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000098-000001E0       .text CreateHeap__12daObjPlant_cFv */
void daObjPlant_c::CreateHeap() {
    /* Nonmatching */
}

/* 000001E0-000002AC       .text CreateInit__12daObjPlant_cFv */
void daObjPlant_c::CreateInit() {
    /* Nonmatching */
}

/* 000002AC-00000390       .text nodeCallBack__FP7J3DNodei */
void nodeCallBack(J3DNode*, int) {
    /* Nonmatching */
}

/* 00000390-00000410       .text set_mtx__12daObjPlant_cFv */
void daObjPlant_c::set_mtx() {
    /* Nonmatching */
}

/* 00000410-00000544       .text daObjPlant_Create__FPv */
void daObjPlant_Create(void*) {
    /* Nonmatching */
}

/* 00000544-00000610       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 00000610-00000658       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00000658-000006B4       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 000006B4-000006FC       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 000006FC-0000072C       .text daObjPlant_Delete__FPv */
void daObjPlant_Delete(void*) {
    /* Nonmatching */
}

/* 0000072C-00000814       .text daObjPlant_Draw__FPv */
void daObjPlant_Draw(void*) {
    /* Nonmatching */
}

/* 00000814-00000A58       .text daObjPlant_Execute__FPv */
void daObjPlant_Execute(void*) {
    /* Nonmatching */
}

/* 00000A58-00000A60       .text daObjPlant_IsDelete__FPv */
void daObjPlant_IsDelete(void*) {
    /* Nonmatching */
}

/* 00000A60-00000A70       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00000A70-00000A78       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00000A78-00000A80       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00000A80-00000A88       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000A88-00000A90       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000A90-00000AC8       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000AC8-00000AD0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00000AD0-00000AD8       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00000AD8-00000AE0       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00000AE0-00000B18       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00000B18-00000B1C       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 00000B1C-00000B24       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00000B24-00000B2C       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00000B2C-00000B34       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00000B34-00000B40       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00000B40-00000B4C       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00000B4C-00000B54       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00000B54-00000B5C       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

