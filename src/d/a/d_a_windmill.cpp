//
// Generated by dtk
// Translation Unit: d_a_windmill.cpp
//

#include "d_a_windmill.h"
#include "dolphin/types.h"

/* 00000078-000000E8       .text _delete__12daWindMill_cFv */
void daWindMill_c::_delete() {
    /* Nonmatching */
}

/* 000000E8-00000108       .text CheckCreateHeap__FP10fopAc_ac_c */
void CheckCreateHeap(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00000108-000002A0       .text CreateHeap__12daWindMill_cFv */
void daWindMill_c::CreateHeap() {
    /* Nonmatching */
}

/* 000002A0-0000050C       .text CreateInit__12daWindMill_cFv */
void daWindMill_c::CreateInit() {
    /* Nonmatching */
}

/* 0000050C-00000608       .text nodeCallBack__FP7J3DNodei */
void nodeCallBack(J3DNode*, int) {
    /* Nonmatching */
}

/* 00000608-00000670       .text search_wind__12daWindMill_cFv */
void daWindMill_c::search_wind() {
    /* Nonmatching */
}

/* 00000670-00000804       .text _create__12daWindMill_cFv */
void daWindMill_c::_create() {
    /* Nonmatching */
}

/* 00000804-000008D0       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 000008D0-00000918       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 00000918-00000974       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 00000974-000009BC       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 000009BC-00000A9C       .text __dt__8dCcD_CpsFv */
dCcD_Cps::~dCcD_Cps() {
    /* Nonmatching */
}

/* 00000A9C-00000B2C       .text __ct__8dCcD_CpsFv */
dCcD_Cps::dCcD_Cps() {
    /* Nonmatching */
}

/* 00000B2C-00000B88       .text __dt__8cM3dGCpsFv */
cM3dGCps::~cM3dGCps() {
    /* Nonmatching */
}

/* 00000B88-00000BD0       .text __dt__8cM3dGLinFv */
cM3dGLin::~cM3dGLin() {
    /* Nonmatching */
}

/* 00000BD0-00000C9C       .text __dt__8dCcD_SphFv */
dCcD_Sph::~dCcD_Sph() {
    /* Nonmatching */
}

/* 00000C9C-00000D20       .text __ct__8dCcD_SphFv */
dCcD_Sph::dCcD_Sph() {
    /* Nonmatching */
}

/* 00000D20-00000D68       .text __dt__8cM3dGSphFv */
cM3dGSph::~cM3dGSph() {
    /* Nonmatching */
}

/* 00000D68-00000DC4       .text __dt__10dCcD_GSttsFv */
dCcD_GStts::~dCcD_GStts() {
    /* Nonmatching */
}

/* 00000DC4-00000E4C       .text set_mtx__12daWindMill_cFv */
void daWindMill_c::set_mtx() {
    /* Nonmatching */
}

/* 00000E4C-00000ECC       .text _execute__12daWindMill_cFv */
void daWindMill_c::_execute() {
    /* Nonmatching */
}

/* 00000ECC-00001048       .text hane_move__12daWindMill_cFv */
void daWindMill_c::hane_move() {
    /* Nonmatching */
}

/* 00001048-000014AC       .text set_at__12daWindMill_cFv */
void daWindMill_c::set_at() {
    /* Nonmatching */
}

/* 000014AC-000016DC       .text set_co__12daWindMill_cFv */
void daWindMill_c::set_co() {
    /* Nonmatching */
}

/* 000016DC-000017A4       .text _draw__12daWindMill_cFv */
void daWindMill_c::_draw() {
    /* Nonmatching */
}

/* 000017A4-000017C4       .text daWindMill_Create__FPv */
void daWindMill_Create(void*) {
    /* Nonmatching */
}

/* 000017C4-000017E8       .text daWindMill_Delete__FPv */
void daWindMill_Delete(void*) {
    /* Nonmatching */
}

/* 000017E8-0000180C       .text daWindMill_Draw__FPv */
void daWindMill_Draw(void*) {
    /* Nonmatching */
}

/* 0000180C-00001830       .text daWindMill_Execute__FPv */
void daWindMill_Execute(void*) {
    /* Nonmatching */
}

/* 00001830-00001838       .text daWindMill_IsDelete__FPv */
void daWindMill_IsDelete(void*) {
    /* Nonmatching */
}

/* 00001838-00001880       .text __dt__10cCcD_GSttsFv */
cCcD_GStts::~cCcD_GStts() {
    /* Nonmatching */
}

/* 00001880-00001890       .text GetShapeAttr__8dCcD_SphFv */
void dCcD_Sph::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001890-00001898       .text GetCoCP__12cCcD_SphAttrFv */
void cCcD_SphAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001898-000018A0       .text GetCoCP__12cCcD_SphAttrCFv */
void cCcD_SphAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 000018A0-000018A8       .text CrossAtTg__12cCcD_SphAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000018A8-000018B0       .text CrossAtTg__12cCcD_SphAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000018B0-000018E8       .text CrossAtTg__12cCcD_SphAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_SphAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000018E8-000018F0       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_AabAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 000018F0-000018F8       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_TriAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 000018F8-00001900       .text CrossCo__12cCcD_SphAttrCFRC12cCcD_PntAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00001900-00001938       .text CrossCo__12cCcD_SphAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_SphAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001938-0000193C       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 0000193C-00001944       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00001944-00001954       .text GetShapeAttr__8dCcD_CpsFv */
void dCcD_Cps::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001954-0000195C       .text CrossAtTg__12cCcD_CpsAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 0000195C-00001964       .text CrossAtTg__12cCcD_CpsAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001964-0000199C       .text CrossAtTg__12cCcD_CpsAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CpsAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 0000199C-000019A4       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_AabAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 000019A4-000019AC       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_TriAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 000019AC-000019B4       .text CrossCo__12cCcD_CpsAttrCFRC12cCcD_PntAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 000019B4-000019EC       .text CrossCo__12cCcD_CpsAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CpsAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 000019EC-000019F8       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 000019F8-00001A04       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001A04-00001A14       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 00001A14-00001A1C       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00001A1C-00001A24       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 00001A24-00001A2C       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001A2C-00001A34       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001A34-00001A6C       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001A6C-00001A74       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00001A74-00001A7C       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 00001A7C-00001A84       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00001A84-00001ABC       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001ABC-00001AC4       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00001AC4-00001ACC       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00001ACC-00001AD4       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00001AD4-00001ADC       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 00001ADC-00001AE4       .text @280@__dt__8dCcD_CpsFv */
void @280@__dt__8dCcD_CpsFv {
    /* Nonmatching */
}

/* 00001AE4-00001AEC       .text @248@__dt__8dCcD_CpsFv */
void @248@__dt__8dCcD_CpsFv {
    /* Nonmatching */
}

/* 00001AEC-00001AF4       .text @280@__dt__8dCcD_SphFv */
void @280@__dt__8dCcD_SphFv {
    /* Nonmatching */
}

/* 00001AF4-00001AFC       .text @248@__dt__8dCcD_SphFv */
void @248@__dt__8dCcD_SphFv {
    /* Nonmatching */
}

