//
// Generated by dtk
// Translation Unit: d_a_agbsw0.cpp
//

#include "d_a_agbsw0.h"
#include "dolphin/types.h"

/* 00000078-00000344       .text ExeSubA__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubA() {
    /* Nonmatching */
}

/* 00000344-0000066C       .text ExeSubAT__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubAT() {
    /* Nonmatching */
}

/* 0000066C-00000940       .text ExeSubA2__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubA2() {
    /* Nonmatching */
}

/* 00000940-00000AB4       .text ExeSubF__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubF() {
    /* Nonmatching */
}

/* 00000AB4-00000E48       .text ExeSubF2__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubF2() {
    /* Nonmatching */
}

/* 00000E48-00000FE4       .text ExeSubM__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubM() {
    /* Nonmatching */
}

/* 00000FE4-00001198       .text ExeSubM2__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubM2() {
    /* Nonmatching */
}

/* 00001198-00001368       .text ExeSubM3__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubM3() {
    /* Nonmatching */
}

/* 00001368-000017B0       .text TriforceCheck__10daAgbsw0_cFP7daAgb_c */
void daAgbsw0_c::TriforceCheck(daAgb_c*) {
    /* Nonmatching */
}

/* 000017B0-00001AD0       .text ExeSubMW__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubMW() {
    /* Nonmatching */
}

/* 00001AD0-00001CC8       .text ExeSubT__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubT() {
    /* Nonmatching */
}

/* 00001CC8-00001FAC       .text ExeSubS__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubS() {
    /* Nonmatching */
}

/* 00001FAC-000021EC       .text ExeSubR__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubR() {
    /* Nonmatching */
}

/* 000021EC-00002A28       .text ExeSubB__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubB() {
    /* Nonmatching */
}

/* 00002A28-00002D90       .text ExeSubD__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubD() {
    /* Nonmatching */
}

/* 00002D90-000030DC       .text ExeSubFA__10daAgbsw0_cFv */
void daAgbsw0_c::ExeSubFA() {
    /* Nonmatching */
}

/* 000030DC-0000320C       .text HitCheck__10daAgbsw0_cFP10fopAc_ac_c */
void daAgbsw0_c::HitCheck(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 0000320C-00003344       .text HitCheck__10daAgbsw0_cF4cXyzf */
void daAgbsw0_c::HitCheck(cXyz, float) {
    /* Nonmatching */
}

/* 00003344-0000476C       .text MoveCheck__10daAgbsw0_cFs */
void daAgbsw0_c::MoveCheck(short) {
    /* Nonmatching */
}

/* 0000476C-0000477C       .text dComIfGs_getMagic__Fv */
void dComIfGs_getMagic() {
    /* Nonmatching */
}

/* 0000477C-00004818       .text MailSend__10daAgbsw0_cFUsUcUcUcUc */
void daAgbsw0_c::MailSend(unsigned short, unsigned char, unsigned char, unsigned char, unsigned char) {
    /* Nonmatching */
}

/* 00004818-00004838       .text daAgbsw0_Draw__FP10daAgbsw0_c */
void daAgbsw0_Draw(daAgbsw0_c*) {
    /* Nonmatching */
}

/* 00004838-00004B2C       .text draw__10daAgbsw0_cFv */
void daAgbsw0_c::draw() {
    /* Nonmatching */
}

/* 00004B2C-00004CF8       .text daAgbsw0_Execute__FP10daAgbsw0_c */
void daAgbsw0_Execute(daAgbsw0_c*) {
    /* Nonmatching */
}

/* 00004CF8-00004D00       .text daAgbsw0_IsDelete__FP10daAgbsw0_c */
void daAgbsw0_IsDelete(daAgbsw0_c*) {
    /* Nonmatching */
}

/* 00004D00-00004E98       .text daAgbsw0_Delete__FP10daAgbsw0_c */
void daAgbsw0_Delete(daAgbsw0_c*) {
    /* Nonmatching */
}

/* 00004E98-00004F80       .text daAgbsw0_Create__FP10fopAc_ac_c */
void daAgbsw0_Create(fopAc_ac_c*) {
    /* Nonmatching */
}

/* 00004F80-00005458       .text create__10daAgbsw0_cFv */
void daAgbsw0_c::create() {
    /* Nonmatching */
}

/* 00005458-00005524       .text __dt__8dCcD_CylFv */
dCcD_Cyl::~dCcD_Cyl() {
    /* Nonmatching */
}

/* 00005524-0000556C       .text __dt__8cM3dGCylFv */
cM3dGCyl::~cM3dGCyl() {
    /* Nonmatching */
}

/* 0000556C-000055C8       .text __dt__14cCcD_ShapeAttrFv */
cCcD_ShapeAttr::~cCcD_ShapeAttr() {
    /* Nonmatching */
}

/* 000055C8-00005610       .text __dt__8cM3dGAabFv */
cM3dGAab::~cM3dGAab() {
    /* Nonmatching */
}

/* 00005610-0000566C       .text __dt__10dCcD_GSttsFv */
dCcD_GStts::~dCcD_GStts() {
    /* Nonmatching */
}

/* 0000566C-000056B4       .text __dt__10cCcD_GSttsFv */
cCcD_GStts::~cCcD_GStts() {
    /* Nonmatching */
}

/* 000056B4-000056C4       .text GetShapeAttr__8dCcD_CylFv */
void dCcD_Cyl::GetShapeAttr() {
    /* Nonmatching */
}

/* 000056C4-000056CC       .text GetCoCP__12cCcD_CylAttrFv */
void cCcD_CylAttr::GetCoCP() {
    /* Nonmatching */
}

/* 000056CC-000056D4       .text GetCoCP__12cCcD_CylAttrCFv */
void cCcD_CylAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 000056D4-000056DC       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_AabAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_AabAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000056DC-000056E4       .text CrossAtTg__12cCcD_CylAttrCFRC12cCcD_PntAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_PntAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 000056E4-0000571C       .text CrossAtTg__12cCcD_CylAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_CylAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 0000571C-00005724       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_AabAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_AabAttr&, float*) const {
    /* Nonmatching */
}

/* 00005724-0000572C       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_TriAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_TriAttr&, float*) const {
    /* Nonmatching */
}

/* 0000572C-00005734       .text CrossCo__12cCcD_CylAttrCFRC12cCcD_PntAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_PntAttr&, float*) const {
    /* Nonmatching */
}

/* 00005734-0000576C       .text CrossCo__12cCcD_CylAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_CylAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 0000576C-00005770       .text GetGObjInf__12cCcD_GObjInfCFv */
void cCcD_GObjInf::GetGObjInf() const {
    /* Nonmatching */
}

/* 00005770-00005778       .text GetShapeAttr__8cCcD_ObjCFv */
void cCcD_Obj::GetShapeAttr() const {
    /* Nonmatching */
}

/* 00005778-00005780       .text CrossAtTg__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrP4cXyz */
void cCcD_ShapeAttr::CrossAtTg(const cCcD_ShapeAttr&, cXyz*) const {
    /* Nonmatching */
}

/* 00005780-00005788       .text CrossCo__14cCcD_ShapeAttrCFRC14cCcD_ShapeAttrPf */
void cCcD_ShapeAttr::CrossCo(const cCcD_ShapeAttr&, float*) const {
    /* Nonmatching */
}

/* 00005788-00005794       .text GetCoCP__14cCcD_ShapeAttrFv */
void cCcD_ShapeAttr::GetCoCP() {
    /* Nonmatching */
}

/* 00005794-000057A0       .text GetCoCP__14cCcD_ShapeAttrCFv */
void cCcD_ShapeAttr::GetCoCP() const {
    /* Nonmatching */
}

/* 000057A0-000057A8       .text @280@__dt__8dCcD_CylFv */
void @280@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

/* 000057A8-000057B0       .text @248@__dt__8dCcD_CylFv */
void @248@__dt__8dCcD_CylFv {
    /* Nonmatching */
}

