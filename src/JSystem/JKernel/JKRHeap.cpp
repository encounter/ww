//
// Generated by dtk
// Translation Unit: JKRHeap.cpp
//

#include "JSystem/JKernel/JKRHeap.h"
#include "dolphin/types.h"

/* 802B0100-802B0224       .text __ct__7JKRHeapFPvUlP7JKRHeapb */
JKRHeap::JKRHeap(void*, unsigned long, JKRHeap*, bool) {
    /* Nonmatching */
}

/* 802B0224-802B0338       .text __dt__7JKRHeapFv */
JKRHeap::~JKRHeap() {
    /* Nonmatching */
}

/* 802B0338-802B03E8       .text initArena__7JKRHeapFPPcPUli */
void JKRHeap::initArena(char**, unsigned long*, int) {
    /* Nonmatching */
}

/* 802B03E8-802B03F8       .text becomeSystemHeap__7JKRHeapFv */
void JKRHeap::becomeSystemHeap() {
    /* Nonmatching */
}

/* 802B03F8-802B0408       .text becomeCurrentHeap__7JKRHeapFv */
void JKRHeap::becomeCurrentHeap() {
    /* Nonmatching */
}

/* 802B0408-802B0434       .text destroy__7JKRHeapFv */
void JKRHeap::destroy() {
    /* Nonmatching */
}

/* 802B0434-802B0494       .text alloc__7JKRHeapFUliP7JKRHeap */
void JKRHeap::alloc(unsigned long, int, JKRHeap*) {
    /* Nonmatching */
}

/* 802B0494-802B0518       .text alloc__7JKRHeapFUli */
void JKRHeap::alloc(unsigned long, int) {
    /* Nonmatching */
}

/* 802B0518-802B0560       .text free__7JKRHeapFPvP7JKRHeap */
void JKRHeap::free(void*, JKRHeap*) {
    /* Nonmatching */
}

/* 802B0560-802B05DC       .text free__7JKRHeapFPv */
void JKRHeap::free(void*) {
    /* Nonmatching */
}

/* 802B05DC-802B0634       .text callAllDisposer__7JKRHeapFv */
void JKRHeap::callAllDisposer() {
    /* Nonmatching */
}

/* 802B0634-802B069C       .text freeAll__7JKRHeapFv */
void JKRHeap::freeAll() {
    /* Nonmatching */
}

/* 802B069C-802B0704       .text freeTail__7JKRHeapFv */
void JKRHeap::freeTail() {
    /* Nonmatching */
}

/* 802B0704-802B0764       .text resize__7JKRHeapFPvUlP7JKRHeap */
void JKRHeap::resize(void*, unsigned long, JKRHeap*) {
    /* Nonmatching */
}

/* 802B0764-802B07EC       .text resize__7JKRHeapFPvUl */
void JKRHeap::resize(void*, unsigned long) {
    /* Nonmatching */
}

/* 802B07EC-802B083C       .text getSize__7JKRHeapFPvP7JKRHeap */
void JKRHeap::getSize(void*, JKRHeap*) {
    /* Nonmatching */
}

/* 802B083C-802B0868       .text getSize__7JKRHeapFPv */
void JKRHeap::getSize(void*) {
    /* Nonmatching */
}

/* 802B0868-802B0894       .text getFreeSize__7JKRHeapFv */
void JKRHeap::getFreeSize() {
    /* Nonmatching */
}

/* 802B0894-802B08C0       .text getMaxFreeBlock__7JKRHeapFv */
void JKRHeap::getMaxFreeBlock() {
    /* Nonmatching */
}

/* 802B08C0-802B08EC       .text getTotalFreeSize__7JKRHeapFv */
void JKRHeap::getTotalFreeSize() {
    /* Nonmatching */
}

/* 802B08EC-802B0918       .text getCurrentGroupId__7JKRHeapFv */
void JKRHeap::getCurrentGroupId() {
    /* Nonmatching */
}

/* 802B0918-802B0978       .text getMaxAllocatableSize__7JKRHeapFi */
void JKRHeap::getMaxAllocatableSize(int) {
    /* Nonmatching */
}

/* 802B0978-802B09B0       .text findFromRoot__7JKRHeapFPv */
void JKRHeap::findFromRoot(void*) {
    /* Nonmatching */
}

/* 802B09B0-802B0A58       .text find__7JKRHeapCFPv */
void JKRHeap::find(void*) const {
    /* Nonmatching */
}

/* 802B0A58-802B0AEC       .text dispose_subroutine__7JKRHeapFUlUl */
void JKRHeap::dispose_subroutine(unsigned long, unsigned long) {
    /* Nonmatching */
}

/* 802B0AEC-802B0B14       .text dispose__7JKRHeapFPvUl */
void JKRHeap::dispose(void*, unsigned long) {
    /* Nonmatching */
}

/* 802B0B14-802B0B34       .text dispose__7JKRHeapFPvPv */
void JKRHeap::dispose(void*, void*) {
    /* Nonmatching */
}

/* 802B0B34-802B0B8C       .text dispose__7JKRHeapFv */
void JKRHeap::dispose() {
    /* Nonmatching */
}

/* 802B0B8C-802B0BB4       .text copyMemory__7JKRHeapFPvPvUl */
void JKRHeap::copyMemory(void*, void*, unsigned long) {
    /* Nonmatching */
}

/* 802B0BB4-802B0C08       .text JKRDefaultMemoryErrorRoutine__FPvUli */
void JKRDefaultMemoryErrorRoutine(void*, unsigned long, int) {
    /* Nonmatching */
}

/* 802B0C08-802B0C18       .text setErrorFlag__7JKRHeapFb */
void JKRHeap::setErrorFlag(bool) {
    /* Nonmatching */
}

/* 802B0C18-802B0C38       .text setErrorHandler__7JKRHeapFPFPvUli_v */
void JKRHeap::setErrorHandler(void (*)(void*, unsigned long, int)) {
    /* Nonmatching */
}

/* 802B0C38-802B0C60       .text __nw__FUl */
void operator new(unsigned long) {
    /* Nonmatching */
}

/* 802B0C60-802B0C84       .text __nw__FUli */
void operator new(unsigned long, int) {
    /* Nonmatching */
}

/* 802B0C84-802B0CB0       .text __nw__FUlP7JKRHeapi */
void operator new(unsigned long, JKRHeap*, int) {
    /* Nonmatching */
}

/* 802B0CB0-802B0CD8       .text __nwa__FUl */
void operator new[](unsigned long) {
    /* Nonmatching */
}

/* 802B0CD8-802B0CFC       .text __nwa__FUli */
void operator new[](unsigned long, int) {
    /* Nonmatching */
}

/* 802B0CFC-802B0D28       .text __nwa__FUlP7JKRHeapi */
void operator new[](unsigned long, JKRHeap*, int) {
    /* Nonmatching */
}

/* 802B0D28-802B0D4C       .text __dl__FPv */
void operator delete(void*) {
    /* Nonmatching */
}

/* 802B0D4C-802B0D70       .text __dla__FPv */
void operator delete[](void*) {
    /* Nonmatching */
}

/* 802B0D70-802B0E14       .text state_register__7JKRHeapCFPQ27JKRHeap6TStateUl */
void JKRHeap::state_register(JKRHeap::TState*, unsigned long) const {
    /* Nonmatching */
}

/* 802B0E14-802B0E9C       .text state_compare__7JKRHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState */
void JKRHeap::state_compare(const JKRHeap::TState&, const JKRHeap::TState&) const {
    /* Nonmatching */
}

/* 802B0E9C-802B0F24       .text state_dump__7JKRHeapCFRCQ27JKRHeap6TState */
void JKRHeap::state_dump(const JKRHeap::TState&) const {
    /* Nonmatching */
}

/* 802B0F24-802B0F2C       .text do_changeGroupID__7JKRHeapFUc */
void JKRHeap::do_changeGroupID(unsigned char) {
    /* Nonmatching */
}

/* 802B0F2C-802B0F34       .text do_getCurrentGroupId__7JKRHeapFv */
void JKRHeap::do_getCurrentGroupId() {
    /* Nonmatching */
}
