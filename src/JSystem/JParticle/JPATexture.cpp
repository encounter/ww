//
// Generated by dtk
// Translation Unit: JPATexture.cpp
//

#include "JSystem/JParticle/JPATexture.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "JSystem/JUtility/JUTAssert.h"
#include "dolphin/types.h"

/* 80258660-802586D0       .text __ct__13JPATextureArcFPCUc */
JPATextureArc::JPATextureArc(const unsigned char * pData) {
    mpData = (JPATextureData *) pData;
    mTexture.storeTIMG(&mpData->mResTIMG, (unsigned char)'\0');
}

/* 802586D0-80258BB4       .text initialize__17JPADefaultTextureFP7JKRHeap */
void JPADefaultTexture::initialize(JKRHeap* pHeap) {
    imgBuf = (u8*)JKRHeap::alloc(0x80, 0x20, pHeap);
    JUT_ASSERT("JPATexture.cpp", 50, imgBuf);
    imgBuf[0x00] = 0x00;
    imgBuf[0x01] = 0xff;
    imgBuf[0x02] = 0x00;
    imgBuf[0x03] = 0xff;
    imgBuf[0x04] = 0x00;
    imgBuf[0x05] = 0xff;
    imgBuf[0x06] = 0x00;
    imgBuf[0x07] = 0xff;
    imgBuf[0x08] = 0x00;
    imgBuf[0x09] = 0xff;
    imgBuf[0x0a] = 0x1a;
    imgBuf[0x0b] = 0xff;
    imgBuf[0x0c] = 0x80;
    imgBuf[0x0d] = 0xff;
    imgBuf[0x0e] = 0xd6;
    imgBuf[0x0f] = 0xff;
    imgBuf[0x10] = 0x00;
    imgBuf[0x11] = 0xff;
    imgBuf[0x12] = 0x80;
    imgBuf[0x13] = 0xff;
    imgBuf[0x14] = 0xff;
    imgBuf[0x15] = 0xff;
    imgBuf[0x16] = 0xff;
    imgBuf[0x17] = 0xff;
    imgBuf[0x18] = 0x00;
    imgBuf[0x19] = 0xff;
    imgBuf[0x1a] = 0xd6;
    imgBuf[0x1b] = 0xff;
    imgBuf[0x1c] = 0xff;
    imgBuf[0x1d] = 0xff;
    imgBuf[0x1e] = 0xff;
    imgBuf[0x1f] = 0xff;
    imgBuf[0x20] = 0x00;
    imgBuf[0x21] = 0xff;
    imgBuf[0x22] = 0x00;
    imgBuf[0x23] = 0xff;
    imgBuf[0x24] = 0x00;
    imgBuf[0x25] = 0xff;
    imgBuf[0x26] = 0x00;
    imgBuf[0x27] = 0xff;
    imgBuf[0x28] = 0xd6;
    imgBuf[0x29] = 0xff;
    imgBuf[0x2a] = 0x80;
    imgBuf[0x2b] = 0xff;
    imgBuf[0x2c] = 0x1a;
    imgBuf[0x2d] = 0xff;
    imgBuf[0x2e] = 0x00;
    imgBuf[0x2f] = 0xff;
    imgBuf[0x30] = 0xff;
    imgBuf[0x31] = 0xff;
    imgBuf[0x32] = 0xff;
    imgBuf[0x33] = 0xff;
    imgBuf[0x34] = 0x80;
    imgBuf[0x35] = 0xff;
    imgBuf[0x36] = 0x00;
    imgBuf[0x37] = 0xff;
    imgBuf[0x38] = 0xff;
    imgBuf[0x39] = 0xff;
    imgBuf[0x3a] = 0xff;
    imgBuf[0x3b] = 0xff;
    imgBuf[0x3c] = 0xd6;
    imgBuf[0x3d] = 0xff;
    imgBuf[0x3e] = 0x00;
    imgBuf[0x3f] = 0xff;
    imgBuf[0x40] = 0x00;
    imgBuf[0x41] = 0xff;
    imgBuf[0x42] = 0xd6;
    imgBuf[0x43] = 0xff;
    imgBuf[0x44] = 0xff;
    imgBuf[0x45] = 0xff;
    imgBuf[0x46] = 0xff;
    imgBuf[0x47] = 0xff;
    imgBuf[0x48] = 0x00;
    imgBuf[0x49] = 0xff;
    imgBuf[0x4a] = 0x80;
    imgBuf[0x4b] = 0xff;
    imgBuf[0x4c] = 0xff;
    imgBuf[0x4d] = 0xff;
    imgBuf[0x4e] = 0xff;
    imgBuf[0x4f] = 0xff;
    imgBuf[0x50] = 0x00;
    imgBuf[0x51] = 0xff;
    imgBuf[0x52] = 0x1a;
    imgBuf[0x53] = 0xff;
    imgBuf[0x54] = 0x80;
    imgBuf[0x55] = 0xff;
    imgBuf[0x56] = 0xd6;
    imgBuf[0x57] = 0xff;
    imgBuf[0x58] = 0x00;
    imgBuf[0x59] = 0xff;
    imgBuf[0x5a] = 0x00;
    imgBuf[0x5b] = 0xff;
    imgBuf[0x5c] = 0x00;
    imgBuf[0x5d] = 0xff;
    imgBuf[0x5e] = 0x00;
    imgBuf[0x5f] = 0xff;
    imgBuf[0x60] = 0xff;
    imgBuf[0x61] = 0xff;
    imgBuf[0x62] = 0xff;
    imgBuf[0x63] = 0xff;
    imgBuf[0x64] = 0xd6;
    imgBuf[0x65] = 0xff;
    imgBuf[0x66] = 0x00;
    imgBuf[0x67] = 0xff;
    imgBuf[0x68] = 0xff;
    imgBuf[0x69] = 0xff;
    imgBuf[0x6a] = 0xff;
    imgBuf[0x6b] = 0xff;
    imgBuf[0x6c] = 0x80;
    imgBuf[0x6d] = 0xff;
    imgBuf[0x6e] = 0x00;
    imgBuf[0x6f] = 0xff;
    imgBuf[0x70] = 0xd6;
    imgBuf[0x71] = 0xff;
    imgBuf[0x72] = 0x80;
    imgBuf[0x73] = 0xff;
    imgBuf[0x74] = 0x1a;
    imgBuf[0x75] = 0xff;
    imgBuf[0x76] = 0x00;
    imgBuf[0x77] = 0xff;
    imgBuf[0x78] = 0x00;
    imgBuf[0x79] = 0xff;
    imgBuf[0x7a] = 0x00;
    imgBuf[0x7b] = 0xff;
    imgBuf[0x7c] = 0x00;
    imgBuf[0x7d] = 0xff;
    imgBuf[0x7e] = 0x00;
    imgBuf[0x7f] = 0xff;
    DCStoreRange(imgBuf, 0x80);
    GXInitTexObj(&mTexObj, imgBuf, 8, 8, GX_TF_IA8, GX_REPEAT, GX_REPEAT, false);
    GXInitTexObjLOD(&mTexObj, GX_LINEAR, GX_LINEAR, 0.0f, 0.0f, 0.0f, GX_FALSE, GX_FALSE, GX_ANISO_1);
}
